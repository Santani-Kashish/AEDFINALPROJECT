
package userInterface.transport;

import Business.Account.MainAcc;
import Business.Employee.PersonEntity;
import Business.Environment;
import Business.Enterprise.Enterprise;
import Business.Organization.Organization;
import Business.Organization.CarriageAdmin;
import Business.WorkQueue.Request;
import java.awt.Font;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author sreshtha
 */
public class TransportationAdminWorkAreaJPanel extends javax.swing.JPanel {


    JPanel rightPanel;
    MainAcc account;
    Organization organization;
    Environment business;
    Enterprise enterprise;
    public TransportationAdminWorkAreaJPanel(JPanel rightPanel, MainAcc account, Organization organization,Enterprise enterprise, Environment business) {
        initComponents();
        this.rightPanel = rightPanel;
        this.account = account;
        this.business = business;
        this.organization = (CarriageAdmin)organization;
        this.enterprise = enterprise;
        //refreshJButton.setVisible(false);
        populateTable();
          populateDeliveryManTable();
        tblWorkRequest.getTableHeader().setFont(new Font("Baskerville" , Font.ITALIC,20));

    }
    public TransportationAdminWorkAreaJPanel(JPanel rightPanel, MainAcc account, Enterprise enterprise, Environment business) {
        initComponents();
        this.rightPanel = rightPanel;
        this.account = account;
        this.business = business;
        //organization.getEmplo
        this.enterprise = enterprise;
        populateTableEnterprise();
    }

    public void populateTable(){
        DefaultTableModel model = (DefaultTableModel)tblWorkRequest.getModel();
        
        model.setRowCount(0);
        
        for(Request request : business.getWorkQueue().getWorkRequestList()){
            if(request.getStatus().equals("Transport"))
            {
                 Object[] row = new Object[5];
            row[0] = request;
            row[1] = request.getSender().getEmployee().getName();
             row[2] = request.getPatientBloodGroup();
            row[3] = request.getReceiver() == null ? null : request.getReceiver().getEmployee().getName();
            row[4] = request.getStatus();
            
            model.addRow(row); 
            }
          
        }
    }
    public void populateTableEnterprise(){
        DefaultTableModel model = (DefaultTableModel)tblWorkRequest.getModel();
        
        model.setRowCount(0);
        
        for(Organization o : enterprise.getOrganizationDirectory().getOrganizationList()){
           
            for(Request request: Environment.getObj().getWorkQueue().getWorkRequestList()){
                //System.out.println("INSIDE Work Request "+ request);
             Object[] row = new Object[5];
            row[0] = request;
            row[1] = request.getSender().getEmployee().getName();
            row[2] = request.getPatientBloodGroup();
            row[3] = request.getReceiver() == null ? null : request.getReceiver().getEmployee().getName();
            row[4] = request.getStatus();
            
            model.addRow(row);
            }
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblWorkRequest = new javax.swing.JTable();
        btnAssign = new javax.swing.JButton();
        btnRefresh = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbldeliverymanInfo = new javax.swing.JTable();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblWorkRequest.setFont(new java.awt.Font("Times New Roman", 1, 23)); // NOI18N
        tblWorkRequest.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Message", "Sender", "Blood Group", "Receiver", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblWorkRequest);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, 1090, 180));

        btnAssign.setBackground(new java.awt.Color(0, 0, 0));
        btnAssign.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        btnAssign.setForeground(new java.awt.Color(255, 255, 255));
        btnAssign.setText("Assign to Delivery Man");
        btnAssign.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnAssign.setBorderPainted(false);
        btnAssign.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAssignActionPerformed(evt);
            }
        });
        add(btnAssign, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 500, 300, 40));

        btnRefresh.setBackground(new java.awt.Color(0, 0, 0));
        btnRefresh.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        btnRefresh.setForeground(new java.awt.Color(255, 255, 255));
        btnRefresh.setText("Refresh");
        btnRefresh.setBorderPainted(false);
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });
        add(btnRefresh, new org.netbeans.lib.awtextra.AbsoluteConstraints(851, 150, 150, 40));

        tbldeliverymanInfo.setFont(new java.awt.Font("Times New Roman", 1, 23)); // NOI18N
        tbldeliverymanInfo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Id", "Delivery Man Name"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tbldeliverymanInfo);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 330, 970, 150));
    }// </editor-fold>//GEN-END:initComponents

    private void btnAssignActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAssignActionPerformed

        int selectedRow = tblWorkRequest.getSelectedRow();
        int selectedDeliveryMan = tbldeliverymanInfo.getSelectedRow();

        if(tblWorkRequest.getRowCount()==0){
            JOptionPane.showMessageDialog(null, "Empty Table Error", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null, "select a row to proceed", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        if(tbldeliverymanInfo.getRowCount() == 0)
        {
             JOptionPane.showMessageDialog(null, "Delivery Person Unavailble", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        if (selectedDeliveryMan < 0){
            JOptionPane.showMessageDialog(null, "Select a Delivery person", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }

        String emp = (String)tbldeliverymanInfo.getValueAt(selectedDeliveryMan, 1);
         int id = (int)tbldeliverymanInfo.getValueAt(selectedDeliveryMan, 0);
        Request request = (Request)tblWorkRequest.getValueAt(selectedRow, 0);
        PersonEntity e = new PersonEntity();
        e.setName(emp);
       MainAcc account1 = new MainAcc();
        account1.setEmployee(e);
        request.setReceiver(account1);
        request.setStatus("Assigned");
       populateTable();
        JOptionPane.showMessageDialog(null, "Delivery Request Assigned", "Warning", JOptionPane.WARNING_MESSAGE);

    }//GEN-LAST:event_btnAssignActionPerformed

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        // TODO add your handling code here:
        populateTable();
    }//GEN-LAST:event_btnRefreshActionPerformed

 private void populateDeliveryManTable() {
        
        DefaultTableModel model = (DefaultTableModel) tbldeliverymanInfo.getModel();

        model.setRowCount(0);

        for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()) {
            
            if(organization instanceof CarriageAdmin)
            {
                for(PersonEntity emp : organization.getEmpDetails().getEmployeelist())
                {
                    Object[] row = new Object[2];
                    row[0] = emp.getId();
                    row[1] = emp.getName();

                    model.addRow(row);
                }
            }
            
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAssign;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblWorkRequest;
    private javax.swing.JTable tbldeliverymanInfo;
    // End of variables declaration//GEN-END:variables
}
