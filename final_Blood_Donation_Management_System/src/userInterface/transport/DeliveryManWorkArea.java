
package userInterface.transport;

import Business.Account.MainAcc;
import Business.Enterprise.Enterprise;
import Business.Environment;
import Business.Organization.CarriageOrg;
import Business.Organization.Organization;
import Business.WorkQueue.Request;
import java.awt.Font;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author kashish
 */
public class DeliveryManWorkArea extends javax.swing.JPanel {


    JPanel rightPanel;
    MainAcc account;
    Organization organization;
    Environment business;
    Enterprise enterprise;
    public DeliveryManWorkArea(JPanel rightPanel, MainAcc account, Organization organization,Enterprise enterprise, Environment business) {
        initComponents();
        this.rightPanel = rightPanel;
        this.account = account;
        this.business = business;
        this.organization = (CarriageOrg)organization;
        this.enterprise = enterprise;
 
        populateTable();
      
        tblWorkRequest.getTableHeader().setFont(new Font("Baskerville" , Font.ITALIC,20));

    }
   

    public void populateTable(){
        DefaultTableModel model = (DefaultTableModel)tblWorkRequest.getModel();
        
        model.setRowCount(0);
        
        for(Request request : business.getWorkQueue().getWorkRequestList()){
            if(request.getStatus().equals("Assigned") && request.getReceiver().getEmployee().getName().equals(account.getEmployee().getName()))
            {
                 Object[] row = new Object[5];
            row[0] = request;
            row[1] = request.getSender().getEmployee().getName();
             row[2] = request.getPatientBloodGroup();
            row[3] = request.getReceiver() == null ? null : request.getReceiver().getEmployee().getName();
            row[4] = request.getStatus();
            
            model.addRow(row);
            }
           
        }
    }
    public void populateTableEnterprise(){
        DefaultTableModel model = (DefaultTableModel)tblWorkRequest.getModel();
        
        model.setRowCount(0);
        
        for(Organization o : enterprise.getOrganizationDirectory().getOrganizationList()){
           
            for(Request request: Environment.getObj().getWorkQueue().getWorkRequestList()){
                //System.out.println("INSIDE Work Request "+ request);
             Object[] row = new Object[5];
            row[0] = request;
            row[1] = request.getSender().getEmployee().getName();
            row[2] = request.getPatientBloodGroup();
            row[3] = request.getReceiver() == null ? null : request.getReceiver().getEmployee().getName();
            row[4] = request.getStatus();
            
            model.addRow(row);
            }
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblWorkRequest = new javax.swing.JTable();
        btnAssign = new javax.swing.JButton();
        btnRefresh = new javax.swing.JButton();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblWorkRequest.setFont(new java.awt.Font("Times New Roman", 1, 23)); // NOI18N
        tblWorkRequest.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Message", "Sender", "Blood Group", "Receiver", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblWorkRequest);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, 1090, 180));

        btnAssign.setBackground(new java.awt.Color(0, 0, 0));
        btnAssign.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        btnAssign.setForeground(new java.awt.Color(255, 255, 255));
        btnAssign.setText("Deliver");
        btnAssign.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnAssign.setBorderPainted(false);
        btnAssign.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAssignActionPerformed(evt);
            }
        });
        add(btnAssign, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 310, 300, 40));

        btnRefresh.setBackground(new java.awt.Color(0, 0, 0));
        btnRefresh.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        btnRefresh.setForeground(new java.awt.Color(255, 255, 255));
        btnRefresh.setText("Refresh");
        btnRefresh.setBorderPainted(false);
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });
        add(btnRefresh, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 30, 150, 40));
    }// </editor-fold>//GEN-END:initComponents

     
    private void btnAssignActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAssignActionPerformed

        int selectedRow = tblWorkRequest.getSelectedRow();

        if(tblWorkRequest.getRowCount()==0){
            JOptionPane.showMessageDialog(null, "Empty Table Error", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Select a row to proceed", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }

        Request request = (Request)tblWorkRequest.getValueAt(selectedRow, 0);
        request.setReceiver(account);
        request.setStatus("Delivered");
       JOptionPane.showMessageDialog(null, "Blood Delivered", "Warning", JOptionPane.WARNING_MESSAGE);
        

    }//GEN-LAST:event_btnAssignActionPerformed

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        // TODO add your handling code here:
        populateTable();
    }//GEN-LAST:event_btnRefreshActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAssign;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblWorkRequest;
    // End of variables declaration//GEN-END:variables
}
